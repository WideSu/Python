#problem description:
    #beginnging with 0 and 1, the kth number equals to the sum of k-1th and k-2th number. given this condition, we want to know the nth number.

#example:
    # n=8 => 0,1,1,2,3,5,8,13,21 => 21

#idea:
    #traditional: create a [0,1] array and make a loop in range(2,n+1) to append i-1 and i-2
    #recursion: F(n) = F(n-1) + F(n-2)

#traditional code:
def fibo_seq(n):
    ori_fibo = [0,1]
    for i in range(2,n+1):
        ori_fibo.append(ori_fibo[i-1] + ori_fibo[i-2])
    return ori_fibo[n]
    
def fibo_seq(n):
    if n <= 1:
        return n
    ori_fibo = [0,1]
    num_a = 0
    num_b = 1
    for i in range(n-1):
        temp = num_b
        num_b += num_a
        num_a = temp
    return num_b

#recursion code:
def fibo_seq(n):
    if n <= 1:
        return n
    return fibo_seq(n-1)+fibo_seq(n-2)

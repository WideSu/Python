#stack -> last in first out. 
#code:
class Stack(object):
  def __init__(self):
    self.items = []
    self.min = []
  def __len__(self):
    return len(self.items)
  def empty(self):
    return len(self.items) == 0
  def push(self,value):
    self.items.append(value)
  def pop(self):
    if self.empty():
      return None
    return self.items.pop() #remove and return the last one in array
  def top(self): #top is the next value pop out
    if self.empty():
      return None
    return self.items[-1]
#time complexity: O(1)
